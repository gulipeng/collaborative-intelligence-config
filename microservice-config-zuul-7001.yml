spring:
  profiles:
    active: dev #激活开发环境配置

---
server:
  port: 7001

spring:
  profiles: dev
  application:
    name: microservice-zuul-gateway

eureka:
  client:
    registerWithEureka: true # 服务注册开关
    fetchRegistry: true # 服务发现开关
    serviceUrl: # 客户端(服务提供者)注册到哪一个Eureka Server服务注册中心，多个用逗号分隔
      # 单机版 Eureka 服务注册中心
      #defaultZone: http://localhost:6001/eureka
      # 集群版 Eureka 服务注册中心
      defaultZone: http://localhost:6001/eureka,http://localhost:6002/eureka
  instance:
    instanceId: ${spring.application.name}:${server.port} # 指定实例ID,就不会显示主机名了
    preferIpAddress: true     #访问路径可以显示IP地址

zuul:
  routes:
    comp-read:    # 企业查询             路由名称，名称任意，路由名称唯一
      path: /compread/** # 访问路径
      serviceId: microservice-company-read # 指定服务ID，会自动从Eureka中找到此服务的ip和端口        企业查询服务
      stripPrefix: false # 代理转发时去掉前缀，false:代理转发时不去掉前缀 例如:为true时请求 /compread/get/1，代理转发到/get/1

      # 如果多个服务需要经过路由，则同povider-product方式继续添加，例如：

    ind-read:            # 行业查询
      path: /indread/**
      serviceId: microservice-industry-read
      stripPrefix: false

    comp-calculation:   # 企业计算
      path: /comcal/**
      serviceId: microservice-company-calculation
      stripPrefix: false


    comp-cal_py:   # 企业计算  python 程序
      path: /cal_py/**
      serviceId: py-cal-server
      stripPrefix: false

    risk-control-read:  #企业报表读取
      path: /riskcontrol/comp_read/**
      serviceId: risk-control-comp-read
      stripPrefix: false
      
    risk-control-upload:    #风控平台 数据上传
      path: /riskcontrol/updow/**
      serviceId: risk-control-updow
      stripPrefix: false
    
    risk-control-matrix:    #风控平台 矩阵
      path: /riskcontrol/matrix/**
      serviceId: risk-control-matrix
      stripPrefix: false
      
    risk_con_update: #风控平台 数据更新 宏观、行业、企业数据查询
      path: /riskcontrol/**
      serviceId: risk_con_update: 
      stripPrefix: false

  host:
    connect-timeout-millis: 20000
    socket-timeout-millis: 20000

ribbon:
    ReadTimeout: 20000
    ConnectTimeout: 20000
    
---
server:
  port: 7001

spring:
  profiles: prod
  application:
    name: microservice-zuul-gateway

eureka:
  client:
    registerWithEureka: true # 服务注册开关
    fetchRegistry: true # 服务发现开关
    serviceUrl: # 客户端(服务提供者)注册到哪一个Eureka Server服务注册中心，多个用逗号分隔
      # 单机版 Eureka 服务注册中心
      #defaultZone: http://localhost:6001/eureka
      # 集群版 Eureka 服务注册中心
      defaultZone: http://localhost:6001/eureka,http://localhost:6002/eureka
  instance:
    instanceId: ${spring.application.name}:${server.port} # 指定实例ID,就不会显示主机名了
    preferIpAddress: true     #访问路径可以显示IP地址

zuul:
  routes:
    comp-read:    # 企业查询             路由名称，名称任意，路由名称唯一
      path: /compread/** # 访问路径
      serviceId: microservice-company-read # 指定服务ID，会自动从Eureka中找到此服务的ip和端口        企业查询服务
      stripPrefix: false # 代理转发时去掉前缀，false:代理转发时不去掉前缀 例如:为true时请求 /compread/get/1，代理转发到/get/1

      # 如果多个服务需要经过路由，则同povider-product方式继续添加，例如：

    ind-read:            # 行业查询
      path: /indread/**
      serviceId: microservice-industry-read
      stripPrefix: false

    comp-calculation:   # 企业计算
      path: /comcal/**
      serviceId: microservice-company-calculation
      stripPrefix: false


    comp-cal_py:   # 企业计算  python 程序
      path: /cal_py/**
      serviceId: py-cal-server
      stripPrefix: false

    risk-control-read:  #企业报表读取
      path: /riskcontrol/comp_read/**
      serviceId: risk-control-comp-read
      stripPrefix: false
      
    risk-control-upload:    #风控平台 数据上传
      path: /riskcontrol/updow/**
      serviceId: risk-control-updow
      stripPrefix: false
    
    risk-control-matrix:    #风控平台 矩阵
      path: /riskcontrol/matrix/**
      serviceId: risk-control-matrix
      stripPrefix: false
      
    risk_con_update: #风控平台 数据更新 宏观、行业、企业数据查询
      path: /riskcontrol/**
      serviceId: risk_con_update: 
      stripPrefix: false

  host:
    connect-timeout-millis: 20000
    socket-timeout-millis: 20000

ribbon:
    ReadTimeout: 20000
    ConnectTimeout: 20000
